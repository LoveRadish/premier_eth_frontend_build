{"version":3,"sources":["components/UI/Text/Text.js","components/UI/Container/Container.js","components/UI/Container/Container.style.js","containers/SinglePage/SinglePageView.style.js","components/UI/Card/Card.style.js","components/UI/Card/Card.js","containers/SinglePage/Reservation/Reservation.style.js","containers/SinglePage/Reservation/RenderReservationForm.js","containers/SinglePage/Reservation/Reservation.js","containers/SinglePage/MintView.js","components/UI/Heading/Heading.js","components/UI/TextLink/TextLink.js"],"names":["TextWrapper","styled","base","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","themed","Text","content","props","defaultProps","as","m","Container","children","className","fullWidth","noGutter","fluid","ContainerWrapper","div","css","SinglePageWrapper","MintPageWrapper","RatingMeta","themeGet","h2","TextButton","p","TobBarWrapper","ButtonGroup","PostImage","Wrapper","Header","header","Content","Footer","footer","Card","title","ReservationFormWrapper","form","FieldWrapper","FormActionArea","loadingIcon","LoadingOutlined","style","fontSize","color","spin","RenderReservationForm","collectionId","account","setTokenAmountFromProps","tokenAmount","setTokenAmount","useState","isLoading","setIsLoading","isApproveLoading","setIsApproveLoading","isApprovedForStaking","setIsApprovedForStaking","openNotificationWithIcon","type","description","notification","message","placement","handleSaveOwnership","async","isApproved","body","address","AxiosFetch","data","success","handleApprove","approveAll","then","onSubmit","e","preventDefault","res","price","timestamp","mintNft","HtmlLabel","htmlFor","defaultValue","onChange","setTotalPrice","target","value","htmlType","disabled","indicator","onClick","marginTop","CardHeader","priceStyle","pricePeriodStyle","linkStyle","amount","Heading","Reservation","MintView","setCollectionId","setPrice","useEffect","gutter","class","xl","src","alt","HeadingWrapper","mt","mb","LinkWrapper","Link","TextLink","link","icon","to"],"mappings":"uIAAA,0CAYA,MAAMA,EAAcC,YAAO,IAAPA,CAClBC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,YAAO,SAGHC,EAAO,QAAC,QAAEC,KAAYC,GAAf,SACX,cAACX,EAAD,IAAiBW,EAAjB,SAAyBD,KA4C3BD,EAAKG,aAAe,CAClBC,GAAI,IACJC,EAAG,GAGUL,O,kCCxEf,0BAuBeM,IAnBG,IAA0D,IAAzD,SAAEC,EAAF,UAAYC,EAAZ,UAAuBC,EAAvB,SAAkCC,EAAlC,MAA4CC,GAAY,EACzE,OACE,cAAC,IAAD,CACEH,UAAWA,EACXC,UAAWA,EACXC,SAAUA,EACVC,MAAOA,EAJT,SAMGJ,M,gECVP,MAAMK,EAAmBpB,IAAOqB,IAAV,iVAGjBX,GACDA,EAAMO,WACNK,YADA,yFAKCZ,GACAA,EAAMQ,UACLI,YADD,wFAKDA,YALC,IAAD,8LAeCZ,GACDA,EAAMS,OACNG,YADA,8MA0BWF,O,6RCnDf,MAAMG,EAAoBvB,IAAOqB,IAAV,mHAOVG,EAAkBxB,IAAOqB,IAAV,0aAuCfI,GAdezB,IAAOqB,IAAV,mFACdK,YAAS,SAAU,YAKT1B,IAAO2B,GAAV,6HACPD,YAAS,SAAU,YAOJ1B,IAAOqB,IAAV,0WAGZK,YAAS,SAAU,WASjBA,YAAS,YAAa,WAIvBA,YAAS,YAAa,aAqBrBE,GAXO5B,IAAO6B,EAAV,4KACNH,YAAS,SAAU,YAUJ1B,IAAOqB,IAAV,6GAOVS,EAAgB9B,IAAOqB,IAAV,m9CAGAK,YAAS,UAAW,WAIdA,YAAS,WAAY,WAClBA,YAAS,WAAY,WAOnCA,YAAS,SAAU,WAejBA,YAAS,YAAa,WAKtBA,YAAS,YAAa,WACJA,YAAS,YAAa,YAmClDK,EAAc/B,IAAOqB,IAAV,iiCAOAK,YAAS,WAAY,WAChCA,YAAS,SAAU,WAadA,YAAS,SAAU,WAQjBA,YAAS,UAAW,WACtBA,YAAS,UAAW,WASZA,YAAS,UAAW,YAuBjCM,EAAYhC,IAAOqB,IAAV,6nBAkBJK,YAAS,UAAW,WAclBA,YAAS,UAAW,WACzBA,YAAS,SAAU,YAKnBH,O,uGCtQR,MAAMU,EAAUjC,IAAOqB,IAAV,oHAKPa,EAASlC,IAAOmC,OAAV,yGAMNC,EAAUpC,IAAOqB,IAAV,0BACPgB,EAASrC,IAAOsC,OAAV,yG,WCZJ,SAASC,EAAT,GAOX,IAPyB,MAC3BC,EAD2B,UAE3BxB,EAF2B,OAG3BmB,EAH2B,QAI3B1B,EAJ2B,SAK3BM,EAL2B,OAM3BuB,GACC,EACD,OACE,eAACL,EAAD,CAASjB,UAAWA,EAApB,UACE,cAACkB,EAAD,UAASC,GAAkB,6BAAKK,MAChC,cAACJ,EAAD,UAAU3B,GAAoBM,IAC7BuB,GAAU,cAACD,EAAD,UAASC,O,iICZ1B,MAAMG,EAAyBzC,IAAO0C,KAAV,0GAOfC,EAAe3C,IAAOqB,IAAV,wuFAQZK,YAAS,SAAU,WA2BfA,YAAS,SAAU,WACRA,YAAS,UAAW,WAG7BA,YAAS,SAAU,WAyBbA,YAAS,SAAU,WAwB3BA,YAAS,SAAU,WACRA,YAAS,UAAW,WAwBlBA,YAAS,UAAW,WAChBA,YAAS,WAAY,WACpBA,YAAS,WAAY,YAqC3CkB,GA9BmB5C,IAAOqB,IAAV,0HAKhBK,YAAS,SAAU,YAIL1B,IAAOqB,IAAV,6UAqBMrB,IAAOqB,IAAV,mUAIdK,YAAS,UAAW,WAGbA,YAAS,YAAa,WAClBA,YAAS,YAAa,aAU/Be,Q,4BCxKf,MAAMI,EAAc,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,GAAIC,MAAO,SAAWC,MAAI,IAiJnEC,MA/IiBzC,IAE9B,MAAM,aAAE0C,EAAF,QAAgBC,EAAhB,wBAAyBC,GAA4B5C,GACpD6C,EAAaC,GAAkBC,mBAAS,IACxCC,EAAWC,GAAgBF,oBAAS,IACpCG,EAAkBC,GAAuBJ,oBAAS,IAClDK,EAAsBC,GAA2BN,oBAAS,GAE3DO,EAA2B,CAACC,EAAMzB,EAAO0B,KAC7CC,EAAA,EAAaF,GAAM,CACjBG,QAAS5B,EACT0B,YAAaA,EACbG,UAAW,iBA6DTC,EAAsBC,MAAOhB,EAAaH,EAAcC,EAASmB,KACrE,MAAMC,EAAO,CACXlB,YAAaA,EACbH,aAAcA,EACdsB,QAASrB,UAKKsB,YAFN,iBAEsBF,EAAM,SAE/BG,KAAKC,UAEPL,EAEDR,EAAyB,UAAW,mBAAZ,0BAAmDT,EAAnD,kEAGxBS,EAAyB,UAAW,mBAAZ,0BAAmDT,EAAnD,wDACxBuB,OAKAA,EAAgBP,UACpBV,GAAoB,SACdkB,YAAW1B,GAAS2B,MACvBJ,IACqB,GAAhBA,EAAKC,QACPb,EAAyB,QAAS,SAAV,2DAIxBA,EAAyB,UAAW,UAAZ,mGACxBD,GAAwB,IAE1BF,GAAoB,OAU1B,OACE,eAAC,EAAD,CAAwB7C,UAAU,iBAAiBiE,SAxGhCV,UACnBW,EAAEC,iBAEFxB,GAAa,GAEb,MAAMc,EAAO,CACXrB,aAAcA,EACdC,QAASA,GAEX,IAAI+B,QAAYT,YALN,iBAKsBF,EAAM,QAEtC,IAAIW,EAAIR,KAAKC,QAIX,OAFAlB,GAAa,QACbK,EAAyB,QAAS,SAAUoB,EAAIR,KAAKR,SAGvD,IAAIf,EAIF,OAFAM,GAAa,QACbK,EAAyB,QAAS,SAAU,iCAG9C,IAAIT,GAAeA,EAAc,EAI/B,OAFAI,GAAa,QACbK,EAAyB,QAAS,SAAU,oCAI9C,GAAGoB,EAAIR,KAAKC,QACZ,CACE,MAAMQ,EAAQD,EAAIR,KAAKS,MACjBC,EAAYF,EAAIR,KAAKU,UACrBd,EAAaY,EAAIR,KAAKJ,iBAEtBe,YAAQF,EAAO9B,EAAa+B,EAAWlC,EAAe,EAAGC,GAAS2B,MACrEJ,IACqB,GAAhBA,EAAKC,QACU,eAAbD,EAAKX,KACPD,EAAyB,QAAS,SAAV,gEAA6EqB,EAA7E,4BACF,QAAbT,EAAKX,MACdD,EAAyB,QAAS,SAAV,4DAK1BD,EAAwBS,GACxBF,EAAoBf,EAAaH,EAAcC,EAASmB,IAE1Db,GAAa,MAGjBA,GAAa,KAmDf,UACE,eAAChB,EAAD,WACE,cAAC6C,EAAA,EAAD,CAAWC,QAAQ,SAAShF,QAAQ,aACpC,mBAAOwD,KAAK,SAASyB,aAAa,IAAIC,SAAWT,GAThCA,KACrB1B,EAAe0B,GACf5B,EAAwB4B,IAOmCU,CAAcV,EAAEW,OAAOC,YAEhF,eAAClD,EAAD,WACE,oBAAQmD,SAAS,SAAS9B,KAAK,UAAU+B,SAAUtC,EAAnD,WACKA,GAAa,0CACdA,GAAa,mBAAMuC,UAAWpD,QAI/BiB,GACC,oBAAQG,KAAK,UAAUiC,QAASpB,EAAe/B,MAAO,CAAEoD,UAAW,QAAUH,SAAUpC,EAAvF,WACKA,GAAoB,6CACrBA,GAAoB,mBAAMqC,UAAWpD,cC5IrD,MAAMuD,EAAa,IAAiE,IAAhE,MAAEf,EAAF,WAASgB,EAAT,iBAAqBC,EAArB,UAAuCC,EAAvC,OAAkDC,GAAa,EACjF,OACE,cAAC,WAAD,UACE,cAACC,EAAA,EAAD,CACEhG,QACE,eAAC,WAAD,WACI4E,EAAQmB,EADZ,OACwB,cAAChG,EAAA,EAAD,CAAMI,GAAG,OAAOH,QAAQ,MAAO6F,UAGrDD,OAOG,SAASK,EAAYhG,GAElC,MAAM,aAAE0C,EAAF,MAAgBiC,EAAhB,QAAuBhC,GAAY3C,GAElC6C,EAAaC,GAAkBC,mBAAS,GAK/C,OACE,cAAClB,EAAD,CACEvB,UAAU,sBACVmB,OAAQ,cAACiE,EAAD,CAAYf,MAAQA,EAAQmB,OAAQjD,IAC5C9C,QAAS,cAAC,EAAD,CAAuB2C,aAAeA,EAAeC,QAASA,EAASC,wBARnD4B,IAC/B1B,EAAe0B,MAQb5C,OACE,wBAaR8D,EAAWzF,aAAe,CACxB0F,WAAY,CACVpD,MAAO,UACPD,SAAU,OACV7C,WAAY,OAEdmG,iBAAkB,CAChBtD,SAAU,OACV7C,WAAY,OAEdoG,UAAW,CACTvD,SAAU,OACV7C,WAAY,MACZ8C,MAAO,a,uLCJI0D,UArDGjG,IAEd,MAAM,QAAE2C,GAAY3C,GAEb0C,EAAcwD,GAAmBnD,mBAAS,IAC1C4B,EAAOwB,GAAYpD,mBAAS,GA0BrC,OAFAqD,qBAdkBvC,UAChB,MAEMa,QAAYT,YAFN,+BAEsB,GAAI,OACtC,IAAIS,EAAIR,KAAKC,QAMT,OAlB8BZ,EAiBL,QAjBWzB,EAiBF,SAjBS0B,EAiBCkB,EAAIR,KAAKR,aAhBrD,IAAaH,GAAM,CACfG,QAAS5B,EACT0B,YAAaA,EACbG,UAAW,gBAJc,IAACJ,EAAMzB,EAAO0B,EAa3C0C,EAAgBxB,EAAIR,KAAKA,MACzBiC,EAASzB,EAAIR,KAAKS,SAQH,IAGnB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,mBAAK0B,OAAQ,GAAb,SACI,oBAAIC,MAAM,QAAV,kCAEJ,oBAAKD,OAAQ,GAAb,UACI,mBAAKE,GAAI,EAAT,SACI,cAAC,IAAD,CAAa7D,aAAcA,EAAciC,MAAOA,EAAOhC,QAASA,MAEpE,mBAAK4D,GAAI,GAAIjG,UAAU,cAAvB,SACI,mBACIkG,IAAI,mBACJC,IAAI,qB,iCCpDxB,0CAYA,MAAMC,EAAiBpH,YAAO,IAAPA,CACrBC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,YAAO,YAGHkG,EAAU,QAAC,QAAEhG,KAAYC,GAAf,SACd,cAAC0G,EAAD,IAAoB1G,EAApB,SAA4BD,KA4C9BgG,EAAQ9F,aAAe,CACrBC,GAAI,KACJyG,GAAI,EACJC,GAAI,EACJnH,WAAY,KAGCsG,O,iCC1Ef,kDAaA,MAAMc,EAAcvH,YAAOwH,IAAPxH,CAClBC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,YAAO,aAuDMkH,IApDE,IAAwC,IAAvC,KAAEC,EAAF,KAAQC,EAAR,QAAclH,KAAYC,GAAY,EACtD,OACE,eAAC6G,EAAD,CAAaK,GAAIF,KAAUhH,EAA3B,UACGiH,EADH,IACUlH","file":"static/js/38.476628d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst TextWrapper = styled('p')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Text')\n);\n\nconst Text = ({ content, ...props }) => (\n  <TextWrapper {...props}>{content}</TextWrapper>\n);\n\nText.propTypes = {\n  content: PropTypes.string,\n  as: PropTypes.string,\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nText.defaultProps = {\n  as: 'p',\n  m: 0,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContainerWrapper from './Container.style';\n\nconst Container = ({ children, className, fullWidth, noGutter, fluid }) => {\n  return (\n    <ContainerWrapper\n      className={className}\n      fullWidth={fullWidth}\n      noGutter={noGutter}\n      fluid={fluid}\n    >\n      {children}\n    </ContainerWrapper>\n  );\n};\n\nContainer.propTypes = {\n  className: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  noGutter: PropTypes.bool,\n};\n\nexport default Container;\n","import styled, { css } from 'styled-components';\n\nconst ContainerWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  ${(props) =>\n    props.fullWidth &&\n    css`\n      width: 100%;\n      max-width: none !important;\n    `};\n  ${(props) =>\n    (props.noGutter &&\n      css`\n        padding-left: 0;\n        padding-right: 0;\n      `) ||\n    css`\n      padding-left: 30px;\n      padding-right: 30px;\n\n      @media (max-width: 480px) {\n        padding-left: 25px;\n        padding-right: 25px;\n      }\n    `};\n\n  ${(props) =>\n    props.fluid &&\n    css`\n      width: 100% !important;\n      max-width: 1920px !important;\n      @media (min-width: 1441px) {\n        padding-left: 75px;\n        padding-right: 75px;\n      }\n    `}\n\n  @media (min-width: 768px) {\n    max-width: 750px;\n    width: 100%;\n  }\n\n  @media (min-width: 992px) {\n    max-width: 970px;\n    width: 100%;\n  }\n\n  @media (min-width: 1200px) {\n    max-width: 1170px;\n    width: 100%;\n  }\n`;\n\nexport default ContainerWrapper;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst SinglePageWrapper = styled.div`\n  padding-bottom: 56px;\n  @media (max-width: 480px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const MintPageWrapper = styled.div`\n  margin-top: 100px;\n  .title {\n    font-size: 50px;\n    font-weight: 800;\n    margin: 0 auto;\n    margin-bottom: 50px;\n    text-align: center;\n    color: #008489;\n    span {\n      color: red;\n    }\n  }\n  .centerImage {\n    padding-top: 15px;\n    text-align: center;\n  }\n  @media (max-width: 480px) {\n    margin-top: 30px;\n    .centerImage {\n      margin-top: 50px;\n    }\n  }\n`;\n\nexport const LocationMeta = styled.div`\n  color: ${themeGet('text.1', '#909090')};\n  font-size: 13px;\n  font-weight: 400;\n`;\n\nexport const Title = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 25px;\n  line-height: 34px;\n  font-weight: 700;\n  margin: 0 0 4px;\n`;\n\nexport const RatingMeta = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 13px;\n  margin-top: 10px;\n  margin-bottom: 27px;\n  @media (max-width: 767px) {\n    margin-bottom: 20px;\n  }\n\n  i {\n    color: ${themeGet('primary.0', '#008489')};\n  }\n\n  svg {\n    fill: ${themeGet('primary.0', '#008489')};\n  }\n\n  strong {\n    font-weight: 700;\n    margin-left: 8px;\n    margin-top: -2px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 15px;\n  line-height: 24px;\n  font-weight: 400;\n  margin: 0 0 30px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const TextButton = styled.div`\n  margin: 30px 0 0;\n  @media (max-width: 767px) {\n    margin-top: 19px;\n  }\n`;\n\nexport const TobBarWrapper = styled.div`\n  .sticky-outer-wrapper {\n    .sticky-inner-wrapper {\n      background-color: ${themeGet('color.1', '#ffffff')};\n\n      .scrollbar {\n        box-shadow: none;\n        border-top: 1px solid ${themeGet('border.3', '#E6E6E6')};\n        border-bottom: 1px solid ${themeGet('border.3', '#E6E6E6')};\n\n        .scrollbar_left {\n          margin-right: 25px;\n          padding-left: 25px;\n\n          a {\n            color: ${themeGet('text.0', '#2C2C2C')};\n            font-size: 15px;\n            padding: 28px 20px;\n            text-transform: capitalize;\n            transition: color 0.2s ease-in-out;\n\n            &:first-child {\n              padding-left: 0;\n            }\n\n            @media (max-width: 1200px) {\n              padding: 18px 20px;\n            }\n\n            &:hover {\n              color: ${themeGet('primary.0', '#008489')};\n            }\n\n            &.active {\n              font-weight: 700;\n              color: ${themeGet('primary.0', '#008489')};\n              border-bottom: 3px solid ${themeGet('primary.0', '#008489')};\n            }\n          }\n        }\n\n        .scrollbar_right {\n          padding-right: 25px;\n\n          button,\n          .ant-btn {\n            @media (max-width: 767px) {\n              min-width: 50px;\n              svg {\n                margin-right: 0;\n              }\n              > span {\n                display: none;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    &.isSticky {\n      .sticky-inner-wrapper {\n        > div {\n          border: 0;\n          box-shadow: 0 2px 5px -2px rgba(0, 0, 0, 0.16);\n        }\n      }\n    }\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  button,\n  button.ant-btn {\n    margin: 0 5px;\n    height: 37px;\n    min-width: 90px;\n    padding: 0 5px;\n    border: 1px solid ${themeGet('border.3', '#E6E6E6')};\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 15px;\n    font-weight: 700;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    transition: background-color 0.2s ease;\n    svg {\n      width: 18.309px;\n      height: 15.537px;\n      margin-right: 10px;\n      path {\n        fill: transparent;\n        stroke: ${themeGet('text.0', '#2C2C2C')};\n        stroke-width: 1.5px;\n      }\n    }\n\n    &.active {\n      svg {\n        path {\n          stroke: ${themeGet('color.4', '#FC5C63')};\n          fill: ${themeGet('color.4', '#FC5C63')};\n        }\n      }\n    }\n\n    &:focus {\n      outline: none;\n    }\n    &:hover {\n      background-color: ${themeGet('color.2', '#F7F7F7')};\n    }\n    &:after {\n      display: none;\n    }\n\n    &:first-child {\n      margin-left: 0;\n      svg {\n        position: relative;\n        top: 1px;\n        path {\n          stroke-width: 1.8px;\n        }\n      }\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const PostImage = styled.div`\n  height: 600px;\n  position: relative;\n\n  @media (max-width: 767px) {\n    height: 406px;\n  }\n\n  img.absolute {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    object-fit: cover;\n  }\n\n  .image_gallery_button {\n    background: ${themeGet('color.1', '#ffffff')};\n    border-radius: 3px;\n    font-size: 15px;\n    font-weight: 700;\n    color: #2c2c2c;\n    border: 0;\n    height: 37px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n    position: absolute;\n    bottom: 30px;\n    right: 25px;\n\n    &:hover,\n    &:focus {\n      background: ${themeGet('color.2', '#F7F7F7')};\n      color: ${themeGet('text.0', '#2C2C2C')};\n    }\n  }\n`;\n\nexport default SinglePageWrapper;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 1rem;\n  border-radius: 3px;\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.16);\n`;\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Content = styled.div``;\nexport const Footer = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React from 'react';\nimport { Wrapper, Header, Content, Footer } from './Card.style';\nexport default function Card({\n  title,\n  className,\n  header,\n  content,\n  children,\n  footer,\n}) {\n  return (\n    <Wrapper className={className}>\n      <Header>{header ? header : <h2>{title}</h2>}</Header>\n      <Content>{content ? content : children}</Content>\n      {footer && <Footer>{footer}</Footer>}\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nconst ReservationFormWrapper = styled.form`\n  padding: 0 30px;\n  @media (max-width: 375px) {\n    padding: 0 15px;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  margin-bottom: 30px;\n  @media (max-width: 375px) {\n    margin-bottom: 25px;\n  }\n\n  label {\n    font-size: 15px;\n    color: ${themeGet('text.0', '#2C2C2C')};\n    text-transform: capitalize;\n    margin-bottom: 7px;\n    display: block;\n  }\n\n  /* date picker component style */\n  .date_picker {\n    margin-bottom: 0;\n    > label {\n      margin-bottom: 0;\n      width: 100%;\n    }\n    .DateRangePicker {\n      width: 100%;\n      input,\n      .DateRangePickerInput {\n        border: 0;\n        width: 100%;\n        height: 54px;\n        display: flex;\n        padding: 0 15px;\n        font-size: 15px;\n        font-weight: 400;\n        border-radius: 3px;\n        align-items: center;\n        justify-content: space-between;\n        color: ${themeGet('text.0', '#2C2C2C')};\n        background-color: ${themeGet('color.2', '#F7F7F7')};\n        &::placeholder {\n          font-size: 15px;\n          color: ${themeGet('text.0', '#2C2C2C')};\n        }\n        .DateInput {\n          width: auto;\n          .DateInput_fang {\n            top: 46px !important;\n          }\n        }\n        .DateRangePickerInput_arrow {\n          & + .DateInput {\n            input {\n              text-align: right;\n            }\n          }\n        }\n      }\n      .DateRangePicker_picker {\n        top: 56px !important;\n        .DayPicker {\n          width: 316px !important;\n          .DayPicker_focusRegion {\n            .DayPicker_transitionContainer {\n              width: 316px !important;\n              .CalendarMonth_caption {\n                font-size: 16px;\n                color: ${themeGet('text.0', '#2C2C2C')};\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /* Room guest component style */\n  .view_with__popup {\n    .popup_handler {\n      button,\n      button.ant-btn {\n        border: 0;\n        width: 100%;\n        display: flex;\n        padding: 0 25px;\n        font-size: 15px;\n        font-weight: 400;\n        min-height: 54px;\n        border-radius: 3px;\n        align-items: center;\n        justify-content: space-between;\n        color: ${themeGet('text.0', '#2C2C2C')};\n        background-color: ${themeGet('color.2', '#F7F7F7')};\n        &::after {\n          display: none;\n        }\n      }\n    }\n    &.active {\n      .popup_container {\n        max-width: 316px;\n        padding: 25px 22px;\n        position: absolute;\n        left: 0;\n        top: 56px;\n        z-index: 2;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05), 0 0 0 1px rgba(0, 0, 0, 0.07);\n        &::before {\n          content: '';\n          width: 14px;\n          height: 14px;\n          top: -8px;\n          left: 36px;\n          position: absolute;\n          border-radius: 2px;\n          transform: rotate(45deg);\n          background-color: ${themeGet('color.1', '#ffffff')};\n          border-top: 1px solid ${themeGet('border.3', '#E6E6E6')};\n          border-left: 1px solid ${themeGet('border.3', '#E6E6E6')};\n        }\n      }\n    }\n  }\n`;\n\nexport const RoomGuestWrapper = styled.div`\n  width: 100%;\n  strong {\n    font-size: 15px;\n    font-weight: 400;\n    color: ${themeGet('text.0', '#2C2C2C')};\n  }\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 10px;\n  }\n\n  .quantity {\n    height: 30px;\n    input {\n      font-size: 15px;\n    }\n    button.btn svg {\n      width: 18px;\n      height: 18px;\n    }\n  }\n`;\n\nexport const FormActionArea = styled.div`\n  button.ant-btn-primary {\n    width: 100%;\n    height: 47px;\n    color: ${themeGet('color.1', '#ffffff')};\n    font-size: 15px;\n    font-weight: 700;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    transition: all 0.2s ease;\n    &:hover,\n    &:focus {\n      outline: none;\n      opacity: 0.93;\n    }\n  }\n`;\n\nexport default ReservationFormWrapper;\n","import React, { useState } from 'react';\nimport { Button, Input, notification, Spin  } from 'antd';\nimport HtmlLabel from 'components/UI/HtmlLabel/HtmlLabel';\nimport ReservationFormWrapper, {\n  FormActionArea,\n  FieldWrapper,\n} from './Reservation.style.js';\nimport AxiosFetch from 'library/hooks/AxiosFetch';\nimport mintNft, { approveAll } from 'web3/Premier';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst loadingIcon = <LoadingOutlined style={{ fontSize: 24, color: \"white\" }} spin />;\n\nconst RenderReservationForm = ( props ) => {\n  \n  const { collectionId, account, setTokenAmountFromProps } = props;\n  const [tokenAmount, setTokenAmount] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isApproveLoading, setIsApproveLoading] = useState(false);\n  const [isApprovedForStaking, setIsApprovedForStaking] = useState(true);\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n      placement: 'bottomRight'\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    setIsLoading(true);\n    let url = '/checkMintable';\n    const body = {\n      collectionId: collectionId,\n      account: account\n    }\n    let res = await AxiosFetch(url, body, \"POST\");\n    \n    if(!res.data.success)\n    {\n      setIsLoading(false);\n      openNotificationWithIcon('error', 'Error!', res.data.message)\n      return;\n    }\n    if(!account)\n    {\n      setIsLoading(false);\n      openNotificationWithIcon('error', 'Error!', 'You must connect your wallet!')\n      return;\n    }\n    if(!tokenAmount || tokenAmount < 1)\n    {\n      setIsLoading(false);\n      openNotificationWithIcon('error', 'Error!', 'You have to mint at least 1 NFT.')\n      return;\n    }\n    \n    if(res.data.success)\n    {\n      const price = res.data.price\n      const timestamp = res.data.timestamp\n      const isApproved = res.data.isApproved\n\n      await mintNft(price, tokenAmount, timestamp, collectionId - 1, account).then(\n        (data) => {          \n          if (data.success == false) {\n            if (data.type == \"estimategas\") {\n              openNotificationWithIcon('error', 'Error!', `Insufficient funds to mint. Please consider the price ${price} ETH, and some gas fee!`)              \n            } else if (data.type == \"mint\") {\n              openNotificationWithIcon('error', 'Error!', `Error happened while processing, please try again later`)                            \n            }\n          }\n          else\n          {\n            setIsApprovedForStaking(isApproved);\n            handleSaveOwnership(tokenAmount, collectionId, account, isApproved);\n          }\n          setIsLoading(false);\n        }\n      );   \n      setIsLoading(false);\n    }\n  };  \n\n  const handleSaveOwnership = async (tokenAmount, collectionId, account, isApproved) => {\n    const body = {\n      tokenAmount: tokenAmount,\n      collectionId: collectionId,\n      address: account\n    }\n\n    let url = '/saveOwnerInfo';\n    \n    let res = await AxiosFetch(url, body, \"POST\");\n\n    if(res.data.success)\n    {\n      if(isApproved)\n      {\n        openNotificationWithIcon('success', 'Congratulations!', `You have minted ${tokenAmount} token(s). Please click account button for staking or using.`);      \n      }\n      else {\n        openNotificationWithIcon('success', 'Congratulations!', `You have minted ${tokenAmount} token(s). Please approve your account for staking.`);              \n        handleApprove();\n      }\n    }\n  }  \n  \n  const handleApprove = async() => {\n    setIsApproveLoading(true);\n    await approveAll(account).then(\n      (data) => {            \n        if (data.success == false) {\n          openNotificationWithIcon('error', 'Error!', `Error happened while approving, please try again later`)                            \n        }\n        else\n        {\n          openNotificationWithIcon('success', 'Success', `Your account has been approved for staking. Please click account button for staking or renting.`)                        \n          setIsApprovedForStaking(true);\n        }\n        setIsApproveLoading(false);\n      }\n    );\n  }\n\n  const setTotalPrice = (e) => {\n    setTokenAmount(e);\n    setTokenAmountFromProps(e);\n  }\n\n  return (\n    <ReservationFormWrapper className=\"form-container\" onSubmit={handleSubmit}>      \n      <FieldWrapper>\n        <HtmlLabel htmlFor=\"guests\" content=\"How many\" />       \n        <Input type=\"number\" defaultValue=\"1\" onChange={(e) => setTotalPrice(e.target.value)}/>        \n      </FieldWrapper>\n      <FormActionArea>\n        <Button htmlType=\"submit\" type=\"primary\" disabled={isLoading}>\n          { !isLoading && <span> Mint </span> }\n          { isLoading && <Spin indicator={loadingIcon} /> }\n        </Button>\n\n        {\n          !isApprovedForStaking && \n            <Button type=\"primary\" onClick={handleApprove} style={{ marginTop: \"20px\" }} disabled={isApproveLoading}>\n              { !isApproveLoading && <span> Approve </span> }\n              { isApproveLoading && <Spin indicator={loadingIcon} /> }\n            </Button>\n        }\n      </FormActionArea>\n    </ReservationFormWrapper>\n  );\n};\n\nexport default RenderReservationForm;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'components/UI/Card/Card';\nimport Heading from 'components/UI/Heading/Heading';\nimport Text from 'components/UI/Text/Text';\nimport TextLink from 'components/UI/TextLink/TextLink';\nimport RenderReservationForm from './RenderReservationForm';\n\nconst CardHeader = ({ price, priceStyle, pricePeriodStyle, linkStyle, amount }) => {\n  return (\n    <Fragment>\n      <Heading\n        content={\n          <Fragment>\n            { price * amount } ETH<Text as=\"span\" content=\"\" {...pricePeriodStyle} />\n          </Fragment>\n        }\n        {...priceStyle}\n      />\n      {/* <a href=\"https://turo.com/us/en/drivers/9170089\" target=\"blank\" > Contact Owner </a> */}\n    </Fragment>\n  );\n};\n\nexport default function Reservation(props) {\n\n  const { collectionId, price, account } = props;\n\n  const [tokenAmount, setTokenAmount] = useState(1);\n  const setTokenAmountFromProps = (e) => {\n    setTokenAmount(e);\n  }\n\n  return (\n    <Card\n      className=\"reservation_sidebar\"\n      header={<CardHeader price={ price } amount={tokenAmount}/>}\n      content={<RenderReservationForm collectionId={ collectionId } account={account} setTokenAmountFromProps={setTokenAmountFromProps}/>}\n      footer={\n        <p>          \n        </p>\n      }\n    />\n  );\n}\n\nCardHeader.propTypes = {\n  priceStyle: PropTypes.object,\n  pricePeriodStyle: PropTypes.object,\n  linkStyle: PropTypes.object,\n};\n\nCardHeader.defaultProps = {\n  priceStyle: {\n    color: '#2C2C2C',\n    fontSize: '25px',\n    fontWeight: '700',\n  },\n  pricePeriodStyle: {\n    fontSize: '15px',\n    fontWeight: '400',\n  },\n  linkStyle: {\n    fontSize: '15px',\n    fontWeight: '700',\n    color: '#008489',\n  },\n};\n","import React, { useEffect, useState } from 'react';\r\nimport Sticky from 'react-stickynode';\r\nimport { Row, Col, Image, notification } from 'antd';\r\nimport Container from 'components/UI/Container/Container';\r\nimport Reservation from './Reservation/Reservation';\r\nimport { MintPageWrapper } from './SinglePageView.style';\r\nimport AxiosFetch from 'library/hooks/AxiosFetch';\r\n\r\nconst MintView = (props) => {\r\n\r\n    const { account } = props;  \r\n\r\n    const [collectionId, setCollectionId] = useState(0);\r\n    const [price, setPrice] = useState(3);\r\n\r\n    const openNotificationWithIcon = (type, title, description) => {\r\n        notification[type]({\r\n            message: title,\r\n            description: description,\r\n            placement: 'bottomRight'\r\n        });\r\n    };\r\n\r\n  const fetchData = async () => {\r\n    const url = '/getMintableRandomCollection';\r\n    \r\n    const res = await AxiosFetch(url, {}, \"GET\");\r\n    if (res.data.success) {\r\n        setCollectionId(res.data.data);\r\n        setPrice(res.data.price);\r\n    }\r\n    else {\r\n        openNotificationWithIcon('error', 'Error!', res.data.message);\r\n        return;\r\n    }\r\n  }\r\n\r\n  useEffect(fetchData, []);\r\n\r\n  return (\r\n    <MintPageWrapper>\r\n      <Container>\r\n        <Row gutter={30}>\r\n            <h2 class=\"title\">MINT YOUR PREMIER </h2>\r\n        </Row>\r\n        <Row gutter={30}>\r\n            <Col xl={8}>                \r\n                <Reservation collectionId={collectionId} price={price} account={account}/>                \r\n            </Col>\r\n            <Col xl={16} className=\"centerImage\">\r\n                <Image                    \r\n                    src=\"/images/mint.gif\"\r\n                    alt=\"NFTs\"\r\n                />\r\n            </Col>          \r\n        </Row>\r\n      </Container>\r\n    </MintPageWrapper>\r\n  );\r\n};\r\n\r\nexport default MintView;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst HeadingWrapper = styled('p')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst Heading = ({ content, ...props }) => (\n  <HeadingWrapper {...props}>{content}</HeadingWrapper>\n);\n\nHeading.propTypes = {\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  as: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nHeading.defaultProps = {\n  as: 'h2',\n  mt: 0,\n  mb: 0,\n  fontWeight: 700,\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LinkWrapper = styled(Link)(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('TextLink')\n);\n\nconst TextLink = ({ link, icon, content, ...props }) => {\n  return (\n    <LinkWrapper to={link} {...props}>\n      {icon} {content}\n    </LinkWrapper>\n  );\n};\n\nTextLink.propTypes = {\n  /** Add here link path. */\n  link: PropTypes.string,\n  /** Add here your content Or any component. */\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default TextLink;\n"],"sourceRoot":""}