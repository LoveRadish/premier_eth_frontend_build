{"version":3,"sources":["containers/Auth/SignIn/SignInForm.js","containers/Auth/SignIn/SignIn.js"],"names":["SignInForm","signIn","loggedIn","useContext","AuthContext","control","formState","errors","handleSubmit","useForm","to","ADMIN_PANEL","replace","onSubmit","data","FormControl","label","htmlFor","error","email","type","name","defaultValue","rules","required","pattern","render","field","onChange","onBlur","value","password","minLength","maxLength","Password","valueName","checked","className","htmlType","size","style","width","SignIn","Logo","withLink","linkTo","src","title","alt"],"mappings":"gSAae,SAASA,IAAc,IAAD,UACnC,MAAM,OAAEC,EAAF,SAAUC,GAAaC,qBAAWC,MAClC,QACJC,EACAC,WAAW,OAAEC,GAFT,aAGJC,GACEC,cAIJ,OAAIP,EACK,cAAC,IAAD,CAAUQ,GAAIC,IAAaC,SAAS,IAI3C,uBAAMC,SAAUL,GARAM,IAChBb,EAAOa,MAOP,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,QACRC,MACEX,EAAOY,OACL,qCAC0B,cAAvB,UAAAZ,EAAOY,aAAP,eAAcC,OACb,2DAEsB,aAAvB,UAAAb,EAAOY,aAAP,eAAcC,OACb,0EAVV,SAgBE,cAAC,IAAD,CACEC,KAAK,QACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CACLC,UAAU,EACVC,QAAS,+CAEXC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoBC,IAA9B,SACN,mBACEV,KAAK,QACLQ,SAAUA,EACVC,OAAQA,EACRC,MAAOA,SAKf,cAACf,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MACEX,EAAOwB,UACL,qCAC6B,cAA1B,UAAAxB,EAAOwB,gBAAP,eAAiBX,OAChB,2DAEyB,eAA1B,UAAAb,EAAOwB,gBAAP,eAAiBX,OAChB,0EAEyB,eAA1B,UAAAb,EAAOwB,gBAAP,eAAiBX,OAChB,sFAbV,SAmBE,cAAC,IAAD,CACEC,KAAK,WACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CAAEC,UAAU,EAAMQ,UAAW,EAAGC,UAAW,IAClDP,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoBC,IAA9B,SACN,kBAAOI,SAAP,CAAgBN,SAAUA,EAAUC,OAAQA,EAAQC,MAAOA,SAIjE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEzB,QAASA,EACTgB,KAAK,aACLc,UAAU,UACVb,cAAc,EACdI,OAAQ,QAAGC,OAAO,SAAEC,EAAF,MAAYE,IAAtB,SACN,mBAAQF,SAAUA,EAAUQ,QAASN,OAGzC,cAAC,IAAD,+BAIJ,oBACEO,UAAU,aACVjB,KAAK,UACLkB,SAAS,SACTC,KAAK,QACLC,MAAO,CAAEC,MAAO,QALlB,UAOE,cAAC,IAAD,IAPF,c,QCjESC,UA3BA,IAEX,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,OAAO,IACPC,IAAI,uBACJC,MAAM,0BAER,cAAC,IAAD,sBACA,cAAC,IAAD,+CACA,cAAC/C,EAAD,OAQF,cAAC,IAAD,UACE,qBAAK8C,IAAI,4BAA4BE,IAAI","file":"static/js/51.b5ff189a.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport { Input, Switch, Button } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\nimport {\n  ADMIN_PANEL\n} from 'settings/constant';\n\nexport default function SignInForm() {\n  const { signIn, loggedIn } = useContext(AuthContext);\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const onSubmit = (data) => {\n    signIn(data);\n  };\n  if (loggedIn) {\n    return <Navigate to={ADMIN_PANEL} replace={true} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Email\"\n        htmlFor=\"email\"\n        error={\n          errors.email && (\n            <>\n              {errors.email?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.email?.type === 'pattern' && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          name=\"email\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <Input\n              type=\"email\"\n              onChange={onChange}\n              onBlur={onBlur}\n              value={value}\n            />\n          )}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Password\"\n        htmlFor=\"password\"\n        error={\n          errors.password && (\n            <>\n              {errors.password?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.password?.type === 'minLength' && (\n                <span>Password must be at lest 6 characters!</span>\n              )}\n              {errors.password?.type === 'maxLength' && (\n                <span>Password must not be longer than 20 characters!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          name=\"password\"\n          defaultValue=\"\"\n          control={control}\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <Input.Password onChange={onChange} onBlur={onBlur} value={value} />\n          )}\n        />\n      </FormControl>\n      <FieldWrapper>\n        <SwitchWrapper>\n          <Controller\n            control={control}\n            name=\"rememberMe\"\n            valueName=\"checked\"\n            defaultValue={false}\n            render={({ field: { onChange, value } }) => (\n              <Switch onChange={onChange} checked={value} />\n            )}\n          />\n          <Label>Remember Me</Label>\n        </SwitchWrapper>\n        {/* <Link to={FORGET_PASSWORD_PAGE}>Forget Password ?</Link> */}\n      </FieldWrapper>\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        style={{ width: '100%' }}\n      >\n        <MdLockOpen />\n        Login\n      </Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Divider } from 'antd';\nimport Logo from 'components/UI/Logo/Logo';\nimport { REGISTRATION_PAGE } from 'settings/constant';\nimport SignInForm from './SignInForm';\nimport SocialLogin from '../SocialLogin';\nimport Wrapper, {\n  Title,\n  TitleInfo,\n  Text,\n  FormWrapper,\n  BannerWrapper,\n} from '../Auth.style';\n\nconst SignIn = () => {\n  return (\n    <Wrapper>\n      <FormWrapper>\n        <Logo\n          withLink\n          linkTo=\"/\"\n          src=\"/images/logo-alt.svg\"\n          title=\"Premier Vacations LLC\"\n        />\n        <Title>Welcome</Title>\n        <TitleInfo>Please log into your admin panel</TitleInfo>\n        <SignInForm />\n        {/* <Divider>Or log in with </Divider>\n        <SocialLogin />\n        <Text>\n          Don't Have an Account?&nbsp;\n          <Link to={REGISTRATION_PAGE}>Registration</Link>\n        </Text> */}\n      </FormWrapper>\n      <BannerWrapper>\n        <img src=\"/images/login-page-bg.jpg\" alt=\"Auth page banner\" />\n      </BannerWrapper>\n    </Wrapper>\n  );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}