{"version":3,"sources":["library/hooks/useServerApi.js","containers/Agent/AccountSettings/booking/BookingLists.js","containers/Agent/AccountSettings/AdminBookings.js"],"names":["async","SuperFetch","url","method","body","authAxios","axios","create","baseURL","process","mode","headers","res","get","post","data","dataFetchReducer","state","action","type","loading","error","payload","slice","limit","total","length","Error","useServerApi","initialUrl","initialData","setUrl","useState","dispatch","useReducer","useEffect","didCancel","result","fetchData","loadMoreData","doFetch","columns","title","dataIndex","render","text","substring","sorter","a","b","tokenId","lockDays","id","to","toString","BookingLists","props","filter","apiData","console","log","isEmpty","Loader","dataSource","TabPane","AdminBookings","defaultActiveKey","tab"],"mappings":"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","file":"static/js/48.8149525f.chunk.js","sourcesContent":["import { useState, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nasync function SuperFetch(\n  url,\n  method = 'GET',  \n  body = {}\n) {\n  const authAxios = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL, //YOUR_API_URL HERE\n    mode:'no-cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  let res = {};\n  if(method == \"GET\")\n    res = await authAxios.get(url, body);\n  else if(method == \"POST\")\n    res = await authAxios.post(url, body);\n  return res.data;\n}\n\nfunction dataFetchReducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        data: action.payload.slice(0, state.limit),\n        total: action.payload,\n        loading: false,\n        error: false,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    case 'LOAD_MORE':\n      return {\n        ...state,\n        data: [\n          ...state.data,\n          ...state.total.slice(\n            state.data.length,\n            state.data.length + state.limit\n          ),\n        ],\n        loading: false,\n        error: false,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst useServerApi = (initialUrl, method = 'GET', body = {}, limit = 10, initialData = []) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    loading: false,\n    error: false,\n    data: initialData,\n    total: initialData,\n    limit: limit,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await SuperFetch(url, method, body);        \n        if (!didCancel && result.data) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n  const loadMoreData = () => {\n    dispatch({ type: 'LOAD_MORE' });\n  };\n  const doFetch = (url) => {\n    setUrl(url);\n  };\n\n  return { ...state, doFetch, loadMoreData };\n};\n\nexport default useServerApi;\n","import React from 'react';\r\nimport Loader from 'components/Loader/Loader';\r\nimport useServerApi from 'library/hooks/useServerApi';\r\nimport { Table, Button } from 'antd';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst columns = [    \r\n    {\r\n        title: 'Account',\r\n        dataIndex: 'account',\r\n        render: (text) => <span>{ text.substring(0, 6)}...{text.substring(text.length - 4) }</span>,        \r\n    },\r\n    {\r\n        title: 'Token ID',\r\n        dataIndex: 'tokenId',\r\n        sorter: (a, b) => a.tokenId - b.tokenId,\r\n    },\r\n    {\r\n        title: 'First Name',\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n      title: 'Last Name',\r\n      dataIndex: 'lastName',          \r\n    },\r\n    {\r\n      title: 'Birthday',\r\n      dataIndex: 'birthday',        \r\n    },\r\n    {\r\n      title: 'Phone Number',\r\n      dataIndex: 'phoneNumber',        \r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',        \r\n    },\r\n    {\r\n        title: 'Start Date',\r\n        dataIndex: 'startDate',        \r\n    },\r\n    {\r\n        title: 'End Date',\r\n        dataIndex: 'endDate',  \r\n    },\r\n    {\r\n        title: 'Lock Days',\r\n        dataIndex: 'lockDays', \r\n        sorter: (a, b) => a.lockDays - b.lockDays,             \r\n    },\r\n    {\r\n        title: 'Action', \r\n        dataIndex: 'id',        \r\n        render: (id) => <Link to={id.toString()}> Details </Link>,\r\n    }\r\n];\r\n  \r\n\r\nconst BookingLists = (props) => {  \r\n\r\n  const { filter } = props;\r\n\r\n  let url = '/getAllBookings';\r\n  const apiData = {\r\n    filter: filter\r\n  }\r\n  const { data, loading } = useServerApi(url, \"POST\", apiData, 100000000);\r\n  console.log(data)\r\n  if (isEmpty(data)) return <h2>No Result.</h2>\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingLists;","import React from 'react';\nimport { Tabs } from 'antd';\nimport BookingLists from './booking/BookingLists';\n\nconst { TabPane } = Tabs;\n\nconst AdminBookings = () => {  \n  return (\n    <Tabs defaultActiveKey=\"0\">\n      <TabPane tab=\"All\" key=\"0\">\n        <BookingLists filter=\"all\" />\n      </TabPane>\n      <TabPane tab=\"Booked\" key=\"1\">\n        <BookingLists filter=\"booked\" />\n      </TabPane>\n      <TabPane tab=\"Locked\" key=\"2\">\n        <BookingLists filter=\"locked\" />\n      </TabPane>\n      <TabPane tab=\"Unlock Available\" key=\"3\">\n        <BookingLists filter=\"unlock_available\" />\n      </TabPane>\n      <TabPane tab=\"Unlock Requested\" key=\"4\">\n        <BookingLists filter=\"unlock_requested\" />\n      </TabPane>\n      <TabPane tab=\"Unlocked\" key=\"5\">\n        <BookingLists filter=\"unlocked\" />\n      </TabPane>\n    </Tabs>\n  );\n}\n\nexport default AdminBookings;"],"sourceRoot":""}